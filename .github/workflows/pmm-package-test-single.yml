---
name: Package Test(single)

on:
  workflow_dispatch:
    inputs:
      package_testing_branch:
        description: 'Target branch for package-testing repository'
        type: string
        default: 'master'
        required: true
      playbook:
        description: 'Select test to run:'
        default: 'pmm2-client_integration'
        required: true
        type: choice
        options:
          - pmm2-client
          - pmm2-client_upgrade
          - pmm2-client_custom_path
          - pmm2-client_integration
          - pmm2-client_integration_upgrade
          - pmm2-client_integration_auth_config
          - pmm2-client_integration_auth_register
          - pmm2-client_integration_auth_setup
          - pmm2-client_integration_custom_path
          - pmm2-client_integration_custom_port
          - pmm2-client_integration_upgrade_custom_port
          - pmm2-client_integration_upgrade_custom_path
      repository:
        description: 'Select Repo for Client:'
        required: true
        default: 'dev-latest'
        type: choice
        options:
          - release
          - release candidate
          - patch-release candidate
          - dev-latest
      metrics_mode:
        description: 'Select the Metrics Mode for PMM Client:'
        required: true
        default: 'auto'
        type: choice
        options:
          - auto
          - push
          - pull

jobs:
  get_versions:
    name: Get versions
    uses: percona/pmm-ui-tests/.github/workflows/pmm-version-getter.yml@main
    with:
      repository: ${{ inputs.repository || 'release'}}

  p_test:
    name: ${{ inputs.test_name || 'pmm2-client_integration' }}
    uses: ./.github/workflows/pmm-package-test-runner.yml
    secrets: inherit
    needs: get_versions
    strategy:
      fail-fast: false
      matrix:
        os: ["bionic-x64",
          "bullseye-x64",
          "buster-x64",
          "focal-x64",
          "jammy-x64",
          "centos-7-x64",
          "ol-8-x64",
          "ol-9-x64"]
    with:
      package_testing_branch: ${{ inputs.package_testing_branch || 'master' }}
      expected_version: ${{needs.get_versions.outputs.finish_version}}
      repository: ${{ inputs.repository || 'release'}}
      metrics_mode: ${{ inputs.metrics_mode || 'auto'}}
      playbook: ${{ inputs.playbook || 'pmm2-client_integration' }}
      test_name: ${{ matrix.os }}
      os: ${{ matrix.os }}
