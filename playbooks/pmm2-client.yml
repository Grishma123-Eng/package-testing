---
# This playbook does following:
#   enables Percona testing repository
#   installs latest version of PMM client and PT
#   does some tests

# - import_playbook: test_prep.yml

- hosts: all
  become: true
  become_method: sudo
  vars:
    pmm_server_address: "{{ lookup('env', 'PMM_SERVER_IP') }}"
    test_repo: "{{ lookup('env', 'install_repo') }}"
    metrics_mode: "{{ lookup('env', 'METRICS_MODE') }}"
    pmm_version: "{{ lookup('env', 'PMM_VERSION') | regex_search('\\S(.*\\S)?') }}"

  tasks:
  - name: Register Instance IP
    shell: echo $(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
    register: instance_ip

  - name: Register Instance IP as a variable
    set_fact:
      instance_ip: "{{ instance_ip.stdout }}"

  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: include tasks for enabling test repo
    include_tasks: ../tasks/enable_testing_repo.yml
    when: test_repo == "testing" or test_repo == ""

  - name: include tasks for enabling experimental repo
    include_tasks: ../tasks/enable_experimental_repo.yml
    when: test_repo == "experimental"

  - name: include tasks for enabling main repo
    include_tasks: ../tasks/enable_main_repo.yml
    when: test_repo == "main"

  - name: include tasks for enabling tools main repo
    include_tasks: ../tasks/enable_tools_main_repo.yml
    when: test_repo == "tools-main"

  - name: include tasks for enabling pmm2-client main repo
    include_tasks: ../tasks/enable_pmm2client_main_repo.yml
    when: test_repo == "pmm2-client-main"

  - name: install PMM client new deb packages
    apt: name={{item}} update_cache=yes state=latest
    with_items:
    - pmm2-client
    when: ansible_os_family == "Debian"

  - name: install PMM client new rpm packages
    yum: name={{item}} state=latest
    with_items:
    - pmm2-client
    when: ansible_os_family == "RedHat"

  - name: check that PMM Client version is correct
    include_tasks: ../tasks/verify_pmm_client_version.yml

  - name: Print PMM2-Client Status
    command: pmm-admin status
    register: status
    ignore_errors: yes
  - debug: var=status.stderr_lines

  - name: configure pmm client to connect to server in push/auto Mode
    shell: pmm-admin config --force --server-insecure-tls --metrics-mode=auto --server-url=https://admin:admin@{{ pmm_server_address }} {{ instance_ip }} generic node_{{ instance_ip }}
    when: metrics_mode == "push" or metrics_mode == ""

  - name: configure pmm client to connect to server in pull Mode
    shell: pmm-admin config --force --server-insecure-tls --metrics-mode=pull --server-url=https://admin:admin@{{ pmm_server_address }} {{ instance_ip }} generic node_{{ instance_ip }}
    when: metrics_mode == "pull"

  - name: check that PMM client version is correct
    include_tasks: ../tasks/verify_pmm_status_versions.yml

  - name: check pmm2-client files
    include_tasks: ../tasks/verify_pmm_client_files.yml

  - name: remove PMM client deb packages
    apt: name={{item}} state=absent
    with_items:
    - pmm2-client
    when: ansible_os_family == "Debian"

  - name: remove PMM client rpm packages
    yum: name={{item}} state=absent
    with_items:
    - pmm2-client
    when: ansible_os_family == "RedHat"
