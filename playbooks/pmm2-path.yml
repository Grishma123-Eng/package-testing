---
# This playbook is for debug tarball script:
# - import_playbook: test_prep.yml

- hosts: all
  become: true
  become_method: sudo
  vars:
    pmm_server_address: "{{ lookup('env', 'PMM_SERVER_IP') }}"
    metrics_mode: "{{ lookup('env', 'METRICS_MODE') }}"
    pmm_version: "{{ lookup('env', 'PMM_VERSION') }}"
    pmm_repo: "{{ lookup('env', 'install_repo') }}"

  tasks:
  - name: Register Instance IP
    shell: echo $(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
    register: instance_ip

  - name: Register Instance IP as a variable
    set_fact:
      instance_ip: "{{ instance_ip.stdout }}"

  - name: Print pmm_server_address
    ansible.builtin.debug:
      msg: "{{ pmm_server_address }}"

  - name: Print metrics_mode
    ansible.builtin.debug:
      msg: "{{ metrics_mode }}"

  - name: Print pmm_version
    ansible.builtin.debug:
      msg: "{{ pmm_version }}"

  - name: Print pmm_repo
    ansible.builtin.debug:
      msg: "{{ pmm_repo }}"


  - name: print env vars
    shell: env
    register: print_env

  - name: Print env
    ansible.builtin.debug:
      msg: "{{ print_env.stdout }}"



  - name: setup pmm2-client artifacts for custom path
    command: ../scripts/pmm2_client_install_tarball.sh -p

  - name: check that PMM client dev-latest version is correct
    command: ../version_check.sh pmm2
    when: lookup('env', 'install_repo') == "experimental"

  - name: check that PMM client RC version is correct
    command: ../version_check.sh pmm2-rc
    when: lookup('env', 'install_repo') == "testing" or lookup('env', 'install_repo') == ""



  - name: configure pmm client to connect to server in push/auto Mode
    shell: pmm-admin config --force --server-insecure-tls --metrics-mode=auto --paths-base=/wrong_folder  --server-url=https://admin:admin@{{ pmm_server_address }} {{ instance_ip }} generic node_{{ instance_ip }}
    when: lookup('env', 'metrics_mode') == "push" or lookup('env', 'metrics_mode') == ""

  - name: configure pmm client to connect to server in pull Mode
    shell: pmm-admin config --force --server-insecure-tls --metrics-mode=pull --paths-base=/wrong_folder  --server-url=https://admin:admin@{{ pmm_server_address }} {{ instance_ip }} generic node_{{ instance_ip }}
    when: lookup('env', 'metrics_mode') == "pull"

  - name: Print PMM2-Client Status
    command: pmm-admin status
    register: status
    ignore_errors: yes
  - debug: var=status.stderr_lines

  - name: Fetch PMM-Admin version via pmm-admin status output
    shell: pmm-admin status | grep pmm-admin | awk -F' ' '{print $3}'
    register: pmm_admin_version

  - name: Print the PMM-Admin Version on Status command
    ansible.builtin.debug:
      msg: pmm-admin version is {{ pmm_admin_version.stdout }}

  - name: Assert if the version output value is strict matched with expected version
    assert:
     that:
      - "'{{ pmm_version }}' in pmm_admin_version.stdout"
    when: lookup('env', 'install_repo') == "testing"

