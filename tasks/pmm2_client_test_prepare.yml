# This task contains common actions for the PMM Client all tests at preparation stage

- name: Removing Percona Release package
  include_tasks: ./remove_percona_repository.yml

- name: Install EPEL and GPG
  include_tasks: ./install_epel.yml

- name: Allow release-info to change for apt repositories
  command: apt-get update -y --allow-releaseinfo-change
  when: ansible_os_family == "Debian" and ansible_distribution_release == "buster"

- name: Install percona release package
  include_tasks: ./install_percona_release.yml

- name: install needed packages for running tests with apt
  apt:
    name: "{{ packages }}"
    update_cache: yes
    state: latest
  vars:
    packages:
      - unzip
      - wget
      - gnupg
      - rsync
      - jq # for exporter endpoint metric fetch
      - acl
  retries: 60
  delay: 10
  register: result
  until: result is not failed
  when: ansible_os_family == "Debian"

- name: install needed packages for running tests with yum
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
      - pv
      - libselinux-python
      - unzip
      - wget
      - rsync
      - jq # for exporter end point metric fetch
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 7

- name: install needed packages for running tests with yum on RHEL 8+
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
      - unzip
      - wget
      - jq # for exporter end point metric fetch
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 8

- name: "convert {{ test_repo }} into repository name"
  set_fact:
    repo_name: "{{ (test_repo is search('main')) | ternary ('release', test_repo) }}"

- name: enable psmdb repo
  include_tasks: ./enable_repo.yml
  vars:
    only: yes
    package: "pmm2-client"
    repository: "{{ repo_name }}"

#- name: enable only pmm2-client testing repo
#  command: percona-release enable-only pmm2-client testing
#  when: lookup('env', 'install_repo') == "testing"
#
#- name: enable only pmm2-client experimental repo
#  command: percona-release enable original experimental
#  when: lookup('env', 'install_repo') == "experimental"
#
#- name: enable only pmm2-client release repo
#  command: percona-release enable-only original release
#  when: lookup('env', 'install_repo') == "main" or lookup('env', 'install_repo') == "pmm2-client-main"
