#!/usr/bin/env groovy

def operatingSystems = ['centos-6', 'centos-7', 'debian-9', 'debian-10', 'ubuntu-focal',
                        'ubuntu-xenial', 'ubuntu-bionic', 'rhel8']

def doDynamicParallelSteps(){
  tests = [:]
  operatingSystems.each { os ->
   tests["${os}"] =  {
      node {
        stage("${os}") {
            sh '''
                  cd molecule/pdmysql-proxysql
                  molecule test -s '${os}'
              '''
        }
      }
    }
  }
  parallel tests
}
pipeline {
  agent {
  label 'micro-amazon'
  }
  environment {
      PATH = '/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/ec2-user/.local/bin'
  }
  parameters {
        choice(
            name: 'REPO',
            description: 'Repo for testing',
            choices: [
                'testing',
                'main',
                'experimental'
            ]
        )
  }
    stages {
        stage ('Prepare') {
          steps {
            checkout scm
            sh '''
                sudo yum install -y gcc python3-pip python3-devel libselinux-python openssl-devel
                sudo mkdir -p /usr/local/lib64/python3.7/site-packages
                sudo rsync -aHv /usr/lib64/python2.7/site-packages/*selinux* /usr/local/lib64/python3.7/site-packages/
                pip3 install --user molecule==2.22 pytest ansible wheel boto boto3 paramiko selinux
            '''
          }
        }
        stage('Test') {
            steps{
                script {
                    doDynamicParallelSteps()
        }
      }
    }
  }
}
