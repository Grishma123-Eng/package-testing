pipeline {
  agent any
  environment {
      PATH = '/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/ec2-user/.local/bin'
  }
  stages {
    stage ('Prepare') {
      steps {
        checkout scm
        sh '''
            sudo yum install -y gcc python3-pip python3-devel libselinux-python openssl-devel
            sudo mkdir -p /usr/local/lib64/python3.7/site-packages
            sudo rsync -aHv /usr/lib64/python2.7/site-packages/*selinux* /usr/local/lib64/python3.7/site-packages/
            pip3 install --user pytest molecule ansible wheel boto boto3 paramiko selinux 'molecule[ec2]'
        '''
      }
    }
    stage ('Create virtual machines') {
      steps {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: '4462f2e5-f01c-4e3f-9586-2ffcf5bf366a', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
          sh '''
              cd molecule/pg-11
              python3 -m molecule create -s ec2
          '''
        }
      }
    }
    stage ('Run playbook for test') {
      steps {
        sh '''
            cd molecule/pg-11
            python3 -m molecule --debug converge -s ec2
        '''
      }
    }
    stage ('Start testinfra tests') {
      steps {
        sh '''
            cd molecule/pg-11
            python3 -m molecule verify -s ec2
        '''
        junit 'molecule/pg-11/molecule/default/*.xml'
      }
    }
    stage ('Start packages deletion') {
      steps {
        sh '''
            cd molecule/pg-11
            python3 -m molecule cleanup -s ec2
        '''
      }
    }
  }
  post {
    always {
      withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: '4462f2e5-f01c-4e3f-9586-2ffcf5bf366a', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
        sh '''
            cd molecule/pg-11
            python3 -m molecule destroy -s ec2
        '''
      }
    }
  }
}