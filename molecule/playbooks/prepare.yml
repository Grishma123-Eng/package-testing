---
- name: Prepare node for running tests
  hosts: all
  become: true
  become_method: sudo
  gather_facts: true
  tasks:
    - name: install GPG key for epel 8
      rpm_key:
        state: present
        key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-8
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: install GPG key for Percona repos
      rpm_key:
        state: present
        key: https://repo.percona.com/yum/RPM-GPG-KEY-Percona
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: setup epel 8 repo
      yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm state=present
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: setup ca-certificates release
      yum:
        name: ca-certificates
        update_cache: yes
        state: present
      when: ansible_os_family == "RedHat"

    - name: setup epel release
      yum:
        name: epel-release
        update_cache: yes
        state: present
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version != "8"

    - name: install needed packages for running tests with apt
      apt:
        name: "{{ packages }}"
        update_cache: yes
        state: latest
      vars:
        packages:
          - unzip
          - wget
          - gnupg
          - gnupg2
          - rsync
          - acl
      retries: 60
      delay: 10
      register: result
      until: result is not failed
      when: ansible_os_family == "Debian"

    - name: update systemd-sysv integration on debian/ubuntu
      apt:
        name: "{{ packages }}"
        update_cache: yes
        state: latest
      vars:
        packages:
        - systemd-sysv
      when: ansible_os_family == "Debian" and ansible_distribution_release != "trusty"

    - name: install needed packages for running tests with yum
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - pv
          - libselinux-python
          - unzip
          - wget
          - rsync
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 7

    - name: install needed packages for running tests with yum on RHEL8
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
        - unzip
        - wget
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int == 8

    - name: get list of installed packages on Debian/Ubuntu
      shell: dpkg -l|grep -iE "percona|sysbench|mysql|mongo|proxysql|maria" || true
      register: installed_packages
      when: ansible_os_family == "Debian"

    - name: list installed packages on Debian/Ubuntu
      debug:
        var: installed_packages
      when: ansible_os_family == "Debian"

    - name: get list of installed packages on Centos
      shell: yum list installed|grep -iE "percona|sysbench|mysql|mongo|proxysql|maria" || true
      register: installed_packages
      when: ansible_os_family == "RedHat"

    - name: list installed packages on Centos
      debug:
        var: installed_packages
      when: ansible_os_family == "RedHat"

    - name: get selinux status
      command: sestatus
      register: selinux_status
      when: ansible_os_family == "RedHat"

    - name: list selinux status
      debug:
        var: selinux_status
      when: ansible_os_family == "RedHat"

    - name: get list of enabled dnf modules on centos 8
      command: dnf module list --enabled
      register: enabled_dnf_modules
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: list enabled dnf modules on centos 8
      debug:
        var: enabled_dnf_modules
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"
